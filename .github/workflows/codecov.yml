name: Test and Uplaod to Codecov
on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - main
jobs:
  test_frontend:
    uses: ./.github/workflows/frontend-build.yml

  test_backend:
    runs-on: ubuntu-latest
    steps:
      - name: setup
        uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: setup .envs
        working-directory: ./backend
        run: |
          echo "${{ secrets.PROD_DJANGO_PORTS }}" > .env
          echo "${{ secrets.POSTGRES_CONFIG }}" > .postgresql.env
          mkdir ~/.ssh
          echo "${{ secrets.POSTGRES_USER_PRIV_KEY }}" >> ~/.ssh/posgresql-user-priv_key

      - name: install pipenv
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install pipenv

      - name: cache pipenv
        id: cache-pipenv
        uses: actions/cache@v3
        with:
          path: backend/.venv
          key: venv_cache-${{ hashFiles('backend/Pipfile.lock') }}

      - name: install dependencies
        working-directory: ./backend
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        env:
          PIPENV_VENV_IN_PROJECT: 1
        run: |
          pipenv sync

      - name: Run Tests
        working-directory: ./backend
        run: pipenv run coverage_gen

      - name: Upload Test Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: backend-test
          path: backend/coverage.lcov

      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v3
      #   with:
      #     files: backend/coverage.lcov
      #     token: ${{ secrets.CODECOV_TOKEN }}

  upload_reslts:
    runs-on: ubuntu-latest
    needs: [test_frontend, test_backend]
    steps:
      - uses: actions/checkout@v3

      - name: Download Test Artifacts
        uses: actions/download-artifact@v3

    # runs-on: ubuntu-latest
    # steps:
    #   - name: setup
    #     uses: actions/checkout@v3

    #   - name: setup port .env
    #     working-directory: ./backend
    #     run: |
    #       echo "${{ secrets.PROD_DJANGO_PORTS }}" > .env

    #   - name: cache dependencies
    #     id: npm-cache
    #     uses: actions/cache@v3
    #     with:
    #       path: frontend/node_modules
    #       key: node_modules-${{hashFiles('frontend/package-lock.json') }}

    #   - name: install dependancies
    #     if: steps.npm-cache.outputs.cache-hit != 'true'
    #     working-directory: ./frontend
    #     run: |
    #       npm ci

    #   - name: Build and Test
    #     working-directory: ./frontend
    #     run: |
    #       npm link @angular/cli
    #       npm run actions:test

    #   - name: Upload coverage to Codecov
    #     uses: codecov/codecov-action@v3
    #     with:
    #       files: frontend/coverage/lcov-report/lcov.info
    # token: ${{ secrets.CODECOV_TOKEN }}

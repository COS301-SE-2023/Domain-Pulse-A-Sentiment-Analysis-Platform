name: Test Profiles
on:
    workflow_call:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Login to Docker HHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME  }}
          password: ${{ secrets.DOCKERHUB_TOKEN  }}

      - name: setup .envs
        working-directory: ./backend
        run: |
          echo "$PROD_DJANGO_PORTS" > .env
          echo "$POSTGRES_CONFIG" > .postgresql.env
          mkdir ~/.ssh
          echo "$POSTGRES_USER_PRIV_KEY" >> ~/.ssh/posgresql-user-priv_key
        env:
          PROD_DJANGO_PORTS: ${{ secrets.PROD_DJANGO_PORTS }}
          POSTGRES_CONFIG: ${{ secrets.POSTGRES_CONFIG }}
          POSTGRES_USER_PRIV_KEY: ${{ secrets.POSTGRES_USER_PRIV_KEY }}

      - name: install coverage
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install coverage

      - name: cache deps
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: ~/.local/lib/python3.8/site-packages
          key: pip-deps_cache-${{ hashFiles('backend/profiles/requirements.lock') }}}

      - name: install dependencies
        working-directory: ./backend/profiles
        if: steps.cache-deps.outputs.cache-hit != 'true'
        env:
          PIPENV_VENV_IN_PROJECT: 1
        run: |
          pip install -r requirements.txt

      - name: Run Tests
        working-directory: ./backend/profiles
        run: |
          echo "yes" | coverage run --source='.' manage.py test
          coverage report -m

      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend/profiles
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/domain-pulse-profiles:latest

      - name: Upload Test Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: backend-profiles-test
          path: backend/profiles/.coverage
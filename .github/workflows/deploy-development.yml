name: Development deployment
on:
  push:
    branches: [dev]
jobs:
  check_backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: setup .envs
        working-directory: ./backend
        run: |
          echo "${{ secrets.DEV_DJANGO_PORTS }}" > .env
          echo "${{ secrets.POSTGRES_CONFIG }}" > .postgresql.env
          echo "${{ secrets.POSTGRES_USER_PRIV_KEY }}" >> ~/.ssh/posgresql-user-priv_key

      - name: Install Dependencies
        run: |
          cd backend
          pip install pipenv
          pipenv sync
      - name: Verify backend
        run: |
          cd backend
          pipenv run check_all

  build_frontend:
    runs-on: ubuntu-latest
    steps:
      - name: setup
        uses: actions/checkout@v3

      - name: setup port .env
        working-directory: ./backend
        run: |
          echo "${{ secrets.DEV_DJANGO_PORTS }}" > .env

      - name: install dependancies

        run: |
          cd frontend
          npm ci
          npm link @angular/cli
          npm run build:dev

  update_deployment_environment:
    needs: [check_backend, build_frontend]
    runs-on: ubuntu-latest
    steps:
      - name: install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts

      - name: connect and pull
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << EOF
            cd ${{ secrets.WORK_DIR_DEV }}
            git checkout ${{ secrets.DEV_BRANCH }}
            git pull

            cd backend
            # pipenv sync
            echo "${{ secrets.DEV_DJANGO_PORTS }}" > .env
            echo "${{ secrets.POSTGRES_CONFIG }}" > .postgresql.env

            cd ../frontend
            npm run build:dev
            exit
            EOF
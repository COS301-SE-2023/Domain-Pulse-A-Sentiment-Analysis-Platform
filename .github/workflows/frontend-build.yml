name: Frontend Checks
on:
  workflow_call:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: setup
        uses: actions/checkout@v3
        with:
            fetch-depth: 0

      - name: Login to Docker HHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME  }}
          password: ${{ secrets.DOCKERHUB_TOKEN  }}

      - name: setup port .env
        working-directory: ./backend
        run: |
          echo "$PROD_DJANGO_PORTS" > .env
        env:
          PROD_DJANGO_PORTS: ${{ secrets.PROD_DJANGO_PORTS }}

      - name: cache dependencies
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: node_modules-${{hashFiles('frontend/package-lock.json') }}

      - name: install dependancies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        working-directory: ./frontend
        run: |
          npm ci

      - name: Build
        working-directory: ./frontend
        run: |
          npm link @angular/cli
          npm run build:dev

      - name: Test
        working-directory: ./frontend
        run: |
          npm run actions:test

      - name: Check for in Website source code changes
        id: check-changes
        run: |
          if [[ $(git diff --name-only ${{ github.event.before }} ${{ github.sha }} 'frontend') ]]; then
            echo "Changes detected in source directory. Building and pushing Docker image."
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "No changes detected in source directory. Skipping Docker build and push."
            echo "changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Determine Docker Tag
        id: set-image-tag
        run: |
          if [[ ${{ github.ref == 'refs/heads/main' }} == true ]]; then
            echo "Setting image tag to 'latest'"
            echo "IMAGE-TAG=latest" >> $GITHUB_OUTPUT
          elif [[ ${{ github.ref == 'refs/heads/dev'}} == true ]]; then
            echo "Setting image tag to 'dev-latest'"
            echo "IMAGE-TAG=dev-latest" >> $GITHUB_OUTPUT
          else
            echo "Not on main or dev branch. Skipping Docker build and push."
            echo "IMAGE-TAG=none" >> $GITHUB_OUTPUT
          fi

      - name: Push to DockerHub
        if: ${{ steps.check-changes.outputs.changes == 'true' && steps.set-image-tag.outputs.IMAGE-TAG != 'none' }}
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/domain-pulse-webserver:${{ steps.set-image-tag.outputs.IMAGE-TAG }}
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: frontend/dist

      - name: Upload test artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-test
          path: frontend/coverage

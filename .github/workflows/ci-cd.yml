name: CI/CD
on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - main
jobs:
  test_frontend:
    uses: ./.github/workflows/frontend-build.yml
    secrets: inherit

  test_backend:
    uses: ./.github/workflows/backend-build.yml
    secrets: inherit

  upload__test_reslts:
    runs-on: ubuntu-latest
    needs: [test_frontend, test_backend]
    steps:
      - uses: actions/checkout@v3

      - name: Download Test Artifacts
        uses: actions/download-artifact@v3

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: backend-test/coverage.lcov, frontend-test/lcov-report/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}

  update_deployment_environment:
    if: github.ref == 'refs/heads/dev'
    needs: [test_backend, test_frontend]
    runs-on: ubuntu-latest
    steps:
      - name: install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          install -m 600 -D /dev/null ~/.ssh/southerncross_private_key
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          echo "$SOUTHERNCROSS_PRIVATE_KEY" > ~/.ssh/southerncross_private_key
          echo "$SSH_CONFIG" > ~/.ssh/config
          ssh-keyscan -H $SSH_HOST> ~/.ssh/known_hosts

        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SOUTHERNCROSS_PRIVATE_KEY: ${{ secrets.SOUTHERNCROSS_PRIVATE_KEY }}
          SSH_CONFIG: ${{ secrets.SSH_CONFIG }}
          SSH_HOST: ${{ secrets.SSH_HOST }}

      - name: setup .envs
        run: |
          echo "$DEV_DJANGO_PORTS" > .env
          echo "$POSTGRES_CONFIG_SERVER" > .postgresql.env
        env:
          DEV_DJANGO_PORTS: ${{ secrets.DEV_DJANGO_PORTS }}
          POSTGRES_CONFIG_SERVER: ${{ secrets.POSTGRES_CONFIG_SERVER }}

      # the dp-node host is defined in the config file that was echo'ed previously
      - name: connect and pull
        run: |
          ssh -v dp-node-01 << EOF
            cd /home/rocky/domain-pulse
            git checkout dev
            git pull

            docker compose -f dev-server-compose.yml pull

            exit
            EOF

      - name: copy .env files
        run: |
          scp .env dp-node-01:/home/rocky/domain-pulse/backend
          scp .postgresql.env dp-node-01:/home/rocky/domain-pulse/backend

  update_production_environment:
    if: github.ref == 'refs/heads/main'
    needs: [test_backend, test_frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3

      - name: install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/southerncross_private_key
          echo "${{ secrets.SSH_CONFIG }}" > ~/.ssh/config
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts

      - name: setup .envs
        run: |
          echo "$PROD_DJANGO_PORTS" > .env
          echo "$POSTGRES_CONFIG_SERVER" > .postgresql.env
        env:
          PROD_DJANGO_PORTS: ${{ secrets.PROD_DJANGO_PORTS }}
          POSTGRES_CONFIG_SERVER: ${{ secrets.POSTGRES_CONFIG_SERVER }}

      - name: connect and pull first production node
        run: |
          ssh dp-node-02 << EOF
            cd /home/rocky/domain-pulse
            git checkout ${{ secrets.MAIN_BRANCH }}
            git pull

            docker compose -f prod-server-compose.yml pull

            exit
            EOF

      - name: connect and pull second production node
        run: |
          ssh dp-node-03 << EOF
            cd /home/rocky/domain-pulse
            git checkout ${{ secrets.MAIN_BRANCH }}
            git pull

            docker compose -f prod-server-compose.yml pull

            exit
            EOF

      - name: copy .env files
        run: |
          scp .env dp-node-02:/home/rocky/domain-pulse/backend
          scp .postgresql.env dp-node-02:/home/rocky/domain-pulse/backend
          scp .env dp-node-03:/home/rocky/domain-pulse/backend
          scp .postgresql.env dp-node-03:/home/rocky/domain-pulse/backend
